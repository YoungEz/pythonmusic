import discord, time, datetime
from discord.ext import commands
from discord.ext.commands import Bot
from discord.utils import get
import asyncio
import nekos
import time
import colorsys
import sys
import subprocess
from pymongo import MongoClient
import os
import pymongo
import json
import traceback
import requests
import datetime
import random
from random import choice





url = os.environ.get('URL')
mongo = MongoClient(url)

bot = commands.Bot('s!', owner_id=528782261315698718)
print (discord.__version__)



COLOUR = 0xFFFF00
COR = 0x00ff00
amounts = {}
n = "O Motivo N√£o Foi Definido."

@bot.event
async def on_ready():
	while True:
		await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name=f"{str(len(set(bot.get_all_members())))} Seres Humanos!"))
		await asyncio.sleep(20)
		await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name=f"{str(len(set(bot.guilds)))} Servidores!"))
		await asyncio.sleep(20)
		await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.streaming, name="Teste Meu Sistema De Economia!"))
		await asyncio.sleep(20)
		await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="s!invite - Me Adicione Em Seu Servidor s!vote - me ajude dando um upvote"))
		await asyncio.sleep(20)
		await bot.change_presence(activity=discord.Activity(name="Minha vers√£o: 3.0"))
		await asyncio.sleep(20)



		



    
@bot.event
async def on_message(message):
	await bot.process_commands(message)
	if message.content.lower().startswith('<@539468157291855903>'):
		await message.channel.send('Ol√° {} Meu prefixo √© ``s!`` para ver meus comandos digite ``s!ajuda`` ou ``s!help``!'.format(message.author.mention))



		





    
@bot.command(pass_context=True, aliases=['latency', 'pong'])
async def ping(ctx):
    '''Find the response time in milliseconds.\n`latency` `pong`'''
    ptime = time.time()
    embed = discord.Embed(Title='Ping', color=0x00FF00)
    embed.add_field(name='Pong!', value='Calculando...')
    embed.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    ping3 = await ctx.send(embed=embed)
    ping2 = time.time() - ptime
    ping1 = discord.Embed(Title='Ping', color=0x00FF00)
    ping1.add_field(name='Pong!', value='{} ms.'.format(int((round(ping2 * 1000)))))
    ping1.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    await ping3.edit(embed=ping1)
    
    
semdesc= "Este usu√°rio n√£o possui descri√ß√£o. para adicionar uma descri√ß√£o digite `s!sobre <descri√ß√£o>`"
nobadg = "Este usu√°rio n√£o possui badges"
novp = "Este usu√°rio n√£o √© vip"
nott = "Nenhuma frase adicionada. Use `s!frase <frase>` para adicionar"
nosp = "Solteiro(a)"   
@bot.command(pass_context=True)
async def registro(ctx):
       try:

         tutorial = mongo["tutorial"]
         rpg = tutorial["rpg"]
         rpg = tutorial.rpg.find_one({"_id":str(ctx.author.id)})
         if rpg is None:
            usuario = {"_id":str(ctx.author.id),"usuario":str(ctx.author.name), "coins":0,"reps":0,"donator":False,"CaixaB":0,"sobre":semdesc, "CaixaM":0, "CaixaE":0, "CaixaL":0, "badges":nobadg, "vip":novp, "titulo":nott, "ship":nosp}
            tutorial.rpg.insert_one(usuario).inserted_id
            await ctx.send(f"<:Registro:581790276163600424> | {ctx.author.mention}, voc√™ foi registrado no banco de dados com sucesso!")
         else:
           await ctx.send(f"<:erro:581791491467378699> | {ctx.author.mention}, voc√™ j√° est√° registrado no banco de dados!")
       except Exception as e:
           await ctx.send(f"[Erro] {e}")
           

@bot.command(pass_context=True, aliases=['coins', 'vercoins', 'versaldo'])
async def saldo(ctx, user: discord.User=None):
	if user is None:
		user = ctx.author
		try:
			
			tutorial = mongo["tutorial"]
			rpg = tutorial["rpg"]
			rpg = tutorial.rpg.find_one({"_id":str(user.id)})
			if rpg is None:
				await ctx.send(f"Ol√° {ctx.author.mention}, voc√™ n√£o est√° registrado no sistema de coins, use !registro para se registrar!")
			else:
				moedas = rpg["coins"]
				await ctx.send(f"Ol√°, {user.mention}, tem {moedas} ryuCoins.")
		except Exception as e:
			await ctx.send(f"[Erro] {e}")
			

@bot.command(pass_context=True, aliases=['reputa√ß√µes', 'reputa√ß√£o'])
async def reps(ctx, user: discord.Member=None):
	if user is None:
		user = ctx.author
	else:
		try:

			tutorial = mongo["tutorial"]
			rpg = tutorial["rpg"]
			rpg = tutorial.rpg.find_one({"_id":str(user.id)})
			if rpg is None:
				await ctx.send(f"Ol√° {ctx.author.mention}, voc√™ n√£o est√° registrado em meu sistema, use s!registro para se registrar!")
			else:
				reps = rpg["reps"]
				await ctx.send(f"<a:rep100:581676089491980301> | {user.mention},  tem {reps} reputa√ß√µes.")
		except Exception as e:
			await ctx.send(f"[Erro] {e}")                 
    

		
@bot.command(pass_context=True)
async def servers(ctx):
	servers = list(bot.guilds)
	await ctx.send("Estou conectado em " + str(len(bot.guilds)) + " servers:")
	for x in range(len(servers)):
		await ctx.send(" "+servers[x-1].name)
		
@bot.command(pass_context=True)
async def frase(ctx, *, frase: str=None):
	if frase is None:
		await ctx.send(f'{ctx.author.mention}, Digite algo para ser a frase de seu perfil')
	else:
		try:
			
			tutorial = mongo["tutorial"]
			rpg = tutorial["rpg"]
			rpg = tutorial.rpg.find_one({"_id":str(ctx.author.id)})
			if rpg is None:
				await ctx.send(f"<:erro:581791491467378699> | {ctx.author.mention}, voc√™ n√£o est√° registrado no sistema, use s!registro para se registrar!")
			else:
				
				tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"titulo":str(frase)}})
				await ctx.send(f"<:semregistro:581793891179560960> | {ctx.author.mention}, setou a frase `{titulo}`")
		except Exception as e:
				await ctx.send(f"[Erro] {e}")		
				await ctx.send(embed=discord.Embed().add_field(name='cargos',value='|'.join([x.mention for x in list(reversed(ctx.guild.roles))][:20])))

@bot.command(pass_context=True, aliases=['casar'])
async def marry(ctx):
	await ctx.send(f'{ctx.author.mention} Este Comando Ainda N√£o Esta Ativo')

@bot.command(pass_context=True, aliases=['loja'])
async def shop(ctx):
	await ctx.send(f'{ctx.author.mention} Este Comando Ainda N√£o Esta Ativo')				
						
@bot.command(pass_context=True)
async def sobre(ctx, *, sobre: str=None):
	if sobre is None:
		await ctx.send(f'{ctx.author.mention}, Digite algo para ser sua descri√ß√£o')
	else:
		try:

			tutorial = mongo["tutorial"]
			rpg = tutorial["rpg"]
			rpg = tutorial.rpg.find_one({"_id":str(ctx.author.id)})
			if rpg is None:
				await ctx.send(f"<:erro:581791491467378699> | {ctx.author.mention}, voc√™ n√£o est√° registrado no sistema, use s!registro para se registrar!")
			else:
				
				tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"sobre":str(sobre)}})
				await ctx.send(f"<:semregistro:581793891179560960> | {ctx.author.mention}, setou a descri√ß√£o `{sobre}`")
		except Exception as e:
				await ctx.send(f"[Erro] {e}")		

@bot.command(pass_context=True)
@commands.is_owner()
async def setcoins(ctx, member:discord.Member=None, coins:int=None):
       try:

         tutorial = mongo["tutorial"]
         rpg = tutorial["rpg"]
         rpg = tutorial.rpg.find_one({"_id":str(member.id)})
         if rpg is None:
            await ctx.send(f"Ol√° {ctx.author.mention}, voc√™ n√£o est√° registrado no sistema de coins, use s!registro para se registrar!")
         else:
             moedas = int(rpg["coins"])+ int(coins)
             tutorial.rpg.update_one({"_id":str(member.id)}, {"$set":{"coins":int(moedas)}})
             await ctx.send(f"üí∏ {ctx.author.mention}, setou {coins} com sucesso para {member.mention}.")
       except Exception as e:
           await ctx.send(f"[Erro] {e}")

@bot.command(pass_context=True)
@commands.cooldown(1, 60*60*24, commands.BucketType.user)
async def daily(ctx):
       try:   	  
 
          tutorial = mongo["tutorial"]
          rpg = tutorial["rpg"]
          rpg = tutorial.rpg.find_one({"_id":str(ctx.author.id)})
          if rpg is None:
            await ctx.send('Voc√™ n√£o esta registrado digite `s!registro` para se registrar')
            ctx.command.reset_cooldown(ctx)        
          else:
          	coins = random.randint(500,1800)
          	moedas = int(rpg["coins"])+ int(coins)
          	tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"coins":int(moedas)}})
          	await ctx.send(f"<a:momeym:581669926809370626> | {ctx.author.mention}, voc√™ ganhou {coins} ryuCoins di√°rios.")
       except Exception as e:
          		await ctx.send(f"[Erro] {e}")

@daily.error
async def daily_error(ctx,error):
     if isinstance(error, discord.ext.commands.CommandOnCooldown):
       min, sec = divmod(error.retry_after, 60)
       h, min = divmod(min, 60)
       if min == 0.0 and h == 0:
           await ctx.send('<a:time:520595409429594125> | **Espere `{0}` segundos para usar o comando novamente.**'.format(round(sec)))
       else:
           await ctx.send('**Espere `{0}` horas `{1}` minutos  e `{2}` segundos para pegar sua daily novamente.**'.format(round(h),round(min),round(sec)))						

@bot.command(pass_context=True)
@commands.cooldown(1, 60*60*2, commands.BucketType.user)
async def rep(ctx, user: discord.User=None):
	bot = user.bot
	if user is None:
		return await ctx.send(f'{ctx.author.mention} Voc√™ deve mencionar um usu√°rio')
		ctx.command.reset_cooldown(ctx)
	if user == ctx.author:
		return await ctx.send(f'{user.mention} Voc√™ n√£o pode dar reputa√ß√µes a voc√™ mesmo')
		ctx.command.reset_cooldown(ctx)
	if user == bot:
		return await ctx.send(f'{user.mention} Voc√™ n√£o pode dar reputa√ß√µes a um bot')
		ctx.command.reset_cooldown(ctx)		
	else:
		try:

			tutorial = mongo["tutorial"]
			rpg = tutorial["rpg"]
			rpg = tutorial.rpg.find_one({"_id":str(user.id)})
			id = ctx.author.id
			if rpg is None:
				await ctx.send('Voc√™ n√£o esta registrado digite `s!registro` para se registrar')
				ctx.command.reset_cooldown(ctx)
			else:
				reps = 1
				reput = int(rpg["reps"])+ int(reps)
				tutorial.rpg.update_one({"_id":str(user.id)}, {"$set":{"reps":int(reput)}})
				await ctx.send(f"<a:rep100:581676089491980301> | {ctx.author.mention}, voc√™ deu `1` reputa√ß√µes para {user.mention} Agora ele tem um total de `{reput}` reputa√ß√µes.")
		except Exception as e:
			await ctx.send(f"[Erro] {e}")
@rep.error
async def rep_error(ctx,error):
     if isinstance(error, discord.ext.commands.CommandOnCooldown):
       min, sec = divmod(error.retry_after, 60)
       h, min = divmod(min, 60)
       if min == 0.0 and h == 0:
           await ctx.send('<a:time:520595409429594125> | **Espere `{0}` segundos para usar o comando novamente.**'.format(round(sec)))
       else:
           await ctx.send('**Espere `{0}` horas `{1}` minutos  e `{2}` segundos para usar o comando novamente.**'.format(round(h),round(min),round(sec)))
           
@bot.command(pass_context=True, aliases=['perfil'])
async def profile(ctx, user: discord.Member=None):
		user = user or ctx.author
		try:

			tutorial = mongo["tutorial"]
			rpg = tutorial["rpg"]
			rpg = tutorial.rpg.find_one({"_id":str(user.id)})
			if rpg is None:
				await ctx.send(f"Ol√° {ctx.author.mention}, voc√™ n√£o est√° registrado em meu sistema, use s!registro para se registrar!")
			else:
				reps = rpg["reps"]
				ship = rpg["ship"]
				money = rpg["coins"]
				sobremim = rpg["sobre"]
				vip = rpg["vip"]
				titulo = rpg["titulo"]
				badges = rpg['badges']
				basica = rpg['CaixaB']
				media = rpg['CaixaM']
				epica = rpg['CaixaE']
				lendaria = rpg['CaixaL']
				embed = discord.Embed(title=f'perfil de {user.name}', color=0xff00AB)
				embed.add_field(name="<a:rep100:581676089491980301> Reputa√ß√£o", value=f"{reps}")
				embed.add_field(name="<a:momeym:581669926809370626> RyuCoins", value=f"{money}")
				embed.add_field(name="üòç Estado Civil", value=f"{ship}")
				embed.add_field(name="<:basica:581838984351580180> Caixas", value=f"<:basica:581838984351580180> **Caixas Basicas:** `{basica}`\n<:media:581838910754127894> **Caixas Medias:** `{media}`\n<:epica:581839027687260164> **Caixas Epicas:**`{epica}`\n<:lendaria:581839194004127764> **Caixas Lendarias**`{lendaria}`")
			embed.add_field(name="üìå Frase", value=f"{titulo}")
			embed.add_field(name="<:Icon_Monthly_VIP_Badge:581844119979032596> Badges",value=f"{badges}")
			embed.add_field(name="<a:vip:581858116631658497> Vip", value=f"{vip}")
			embed.add_field(name="üìñ Sobre", value=f"{sobremim}")
			embed.set_thumbnail(url=user.avatar_url)
			await ctx.send(embed=embed)
		except Exception as e:
			await ctx.send(f"[Erro] {e}")
			
			 		           		          
@bot.command(pass_context=True, aliases=['apostar'])
async def aposta(ctx, aposta: int=None):
       try:
          mongo = MongoClient(url)       	
          tutorial = mongo["tutorial"]
          rpg = tutorial["rpg"]
          moeda2 = tutorial.rpg.find_one({"_id":str(ctx.author.id)})       
          if rpg is None:
             await ctx.send(f"üé≤ {ctx.author.mention}, voc√™ n√£o est√° registrado no sistema, use s!registro para se registrar!")
          else:
          	flip = random.randint(1,2)
          	if flip == 1:
          		if moeda2 < 0:
          			return await ctx.send('{ctx.author.mention} Voc√™ n√£o possui ryucoins suficientes')
          		else:
          			moedas = int(rpg["coins"])+ int(aposta)
          			tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"coins":int(moedas)}})
          			
          			await ctx.send(f"<a:money:581670005306032130> | {ctx.author.mention}, Ganhou a aposta e recebeu `{moedas}` Ryucoins.")
          	if flip == 2:
          		moedas = int(rpg["coins"])- int(aposta)
          		tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"coins":int(moedas)}})
         
          		await ctx.send(f"<a:money:581670005306032130> | {ctx.author.mention}, Perdeu a aposta e perdeu `{moedas}` Ryucoins.")
       except Exception as e:
           await ctx.send(f"[Erro] {e}")

            	
            	
            	
@bot.command(pass_context=True, aliases=['pagar', 'dar', 'transferir'])
async def pay(ctx, member:discord.User=None, coins:int=None):
       try:
          mongo = MongoClient(url)       	
          tutorial = mongo["tutorial"]
          rpg = tutorial["rpg"]
          rpg = tutorial.rpg.find_one({"_id":str(member.id)})
          moeda2 = tutorial.rpg.find_one({"_id":str(ctx.author.id)})       
          if rpg is None:
             await ctx.send(f"üé≤ {ctx.author.mention}, voc√™ n√£o est√° registrado no sistema, use s!registro para se registrar!")
          if moeda2 is None:
             await ctx.send(f"üé≤ {ctx.author.mention}, O Usu√°rio mencionado n√£o est√° registrado no sistema, use s!registro para se registrar!")   
          else:
          	if moeda2< 0:
          		return await ctx.send("voc√™ n√£o tem coins suficientes!")
          	else:
          		moedas = int(rpg["coins"])
          		moedas2 = int(moeda2["coins"])
          		tutorial.rpg.update_one({"_id":str(member.id)}, {"$set":{"coins":int(moedas) + coins}})
          		tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"coins":int(moedas2) - coins}})
          		await ctx.send(f"<a:money:581670005306032130> | {ctx.author.mention}, transferiu {coins} ryucoins com sucesso para {member.mention}.")

       except Exception as e:
           await ctx.send(f"[Erro] {e}")

@bot.command(pass_context=True)
@commands.cooldown(1, 60*60*4, commands.BucketType.user)
async def trabalhar(ctx):
       try:
          mongo = MongoClient(url)    
          tutorial = mongo["tutorial"]
          rpg = tutorial["rpg"]
          rpg = tutorial.rpg.find_one({"_id":str(ctx.author.id)})
          if rpg is None:
            await ctx.send('Voc√™ n√£o esta registrado digite `s!registro` para se registrar')
            ctx.command.reset_cooldown(ctx)            
          
          else:
              coins = random.randint(500, 1000)
              moedas = int(rpg["coins"])+ int(coins)
              tutorial.rpg.update_one({"_id":str(ctx.author.id)}, {"$set":{"coins":int(moedas)}})
              await ctx.send(f"üí∏ {ctx.author.mention}, voc√™ trabalhou e ganhou {coins} ryuCoins.")
       except Exception as e:
           await ctx.send(f"[Erro] {e}")
@trabalhar.error
async def trabalhar_error(ctx,error):
     if isinstance(error, discord.ext.commands.CommandOnCooldown):
       min, sec = divmod(error.retry_after, 60)
       h, min = divmod(min, 60)
       if min == 0.0 and h == 0:
           await ctx.send('<a:time:520595409429594125> | **Espere `{0}` segundos para usar o comando novamente.**'.format(round(sec)))
       else:
           await ctx.send('**Espere `{0}` horas `{1}` minutos  e `{2}` segundos para usar o comando novamente.**'.format(round(h),round(min),round(sec)))
@bot.command(pass_context=True)
async def dog(ctx):
    '''Check out a random cute or funny dog!'''
    r = requests.get('https://random.dog/woof.json')
    json = r.json()
    if r.status_code == 200:
        sdog = discord.Embed(title='Dog√£o', color=0x00FF00,timestamp = datetime.datetime.utcnow())
        sdog.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        sdog.set_image(url=json['url'])
        return await ctx.send(embed=sdog)
    else:
        rdog = discord.Embed(title='Error', description='N√£o pude acessar a API', color=0xFF0000)
        rdog.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        return await ctx.send(embed=rdog)

@bot.command(pass_context=True)
async def cat(ctx):
    '''Check out a random cute or funny cat!'''
    r = requests.get(f'https://catapi.glitch.me/random/')
    json = r.json()
    
    if r.status_code == 200:
        scat = discord.Embed(title='Gato', color=0x00FF00)
        scat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        scat.set_image(url=json['url'])
        scat.set_footer(text=f' {ctx.message.author}', icon_url=f'{ctx.message.author.avatar_url}')
        return await ctx.send(embed=scat)
    else:
        rcat = discord.Embed(title='Error', description='N√£o pude accessar a API', color=0xFF0000)
        rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
        return await ctx.send(embed=rcat)		

@bot.command(pass_context=True)
async def lock(ctx):

       if not ctx.author.guild_permissions.manage_channels:
                 await ctx.send(f"? | {ctx.author.mention} Para executar este comando, voc√™ precisa da permiss√£o de gerenciar canais!")
          
       else:
               try:
                    role = ctx.guild.default_role
                    overwrite = discord.PermissionOverwrite()
                    overwrite.send_messages = False
                    await ctx.channel.set_permissions(overwrite=overwrite, target=role)
                    await ctx.send("üì• | Agora nenhum membro pode falar neste canal!")
               except Exception as e:
                        await ctx.send(f"[ERROR]: {repr(e)}")
@bot.command(pass_context=True)
async def unlock(ctx):
       if not ctx.author.guild_permissions.manage_channels:
                 await ctx.send("? |{ctx.author.mention} Para executar este comando, voc√™ precisa da permiss√£o gerenciar canais!")
       else:
               try:
                     role = ctx.guild.default_role
                     overwrite = discord.PermissionOverwrite()
                     overwrite.send_messages = True
                     await ctx.channel.set_permissions(overwrite=overwrite, target=role)
                     await ctx.send("üì§ | Agora todos os membros podem falar neste canal!")
               except Exception as e:
                        await ctx.send(f"[ERROR]: {repr(e)}")

@bot.command(pass_context = True)
async def ban(ctx, member: discord.Member=None, *, motivo: str = None):
    motivo = motivo or n
    if not member:
    	return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio. Exemplo: ``s!ban <@usu√°rio> <motivo>``'.format(ctx.message.author.mention))
    if not ctx.author.guild_permissions.ban_members:
    	rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
    	rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    	return await ctx.send(embed=rcat)
    else:
        embed = discord.Embed(title='A√ß√£o | Ban', color=0xff0Ab)
        embed.add_field(name='üëÆ Executor', value=ctx.message.author)
        embed.add_field(name='üë• Usu√°rio', value=member.name)
        embed.add_field(name='üíª Id', value=member.id)
        embed.add_field(name='üìù Motivo', value=motivo)
        embed.set_footer(text='Comando Realizado Por: {}| Shiryu Bot ‚òÖ'.format(ctx.message.author.name))
        await ctx.send(embed=embed)
        ban = discord.Embed(title='A√ß√£o | Ban', color=0xff0Ab)
        ban.add_field(name='Executor', value=ctx.message.author)
        ban.add_field(name='Servidor', value=ctx.message.guild.name)
        ban.add_field(name='Motivo', value=motivo)
        ban.set_thumbnail(url=ctx.message.guild.icon_url)
        await member.send(embed=ban)
   
							

      
        embed = discord.Embed(title='A√ß√£o | Ban', description='{} usu√°rio banido com sucesso'.format(ctx.message.author.mention), color=0xff0Ab)
        embed.add_field(name='üëÆ Executor', value=ctx.message.author)
        embed.add_field(name='üë• Usu√°rio', value=member.name)
        embed.add_field(name='üíª Id', value=member.id)
        embed.add_field(name='üìù Motivo', value=motivo)
        embed.set_footer(text='Comando Realizado Por: {}| Shiryu Bot ‚òÖ'.format(ctx.message.author.name))
        await ctx.send(embed=embed)
        ban = discord.Embed(title='A√ß√£o | Ban'.format(ctx.message.author.mention), color=0xff0Ab)
        ban.add_field(name='Executor', value=ctx.message.author)
        ban.add_field(name='Servidor', value=ctx.message.guild.name)
        ban.add_field(name='Motivo', value=motivo)
        ban.set_thumbnail(url=ctx.message.guild.icon_url)
        await member.send(embed=ban)
   
							
@bot.command(pass_context = True)
@commands.has_permissions(kick_members=True)
async def kick(ctx, user: discord.User=None, *, motivo: str = None):
    motivo = motivo or n
    if not user:
        return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio. Exemplo: ``s!kick <@usu√°rio> <motivo>``'.format(ctx.message.author.mention))
    if not ctx.author.guild_permissions.kick_members:
    	rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
    	rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    	return await ctx.send(embed=rcat)        
    else:
        await ctx.guild.kick(user)
        embed = discord.Embed(title='A√ß√£o | Kick!', description='{} usu√°rio expulso com sucesso'.format(ctx.message.author.mention), color=0xff0Ab)
        embed.add_field(name='üëÆ Autor', value=ctx.message.author)
        embed.add_field(name='üë• usu√°rio', value=user)
        embed.add_field(name='üíª Id', value=user.id)
        embed.add_field(name='üìù Motivo', value=motivo)
        embed.set_footer(text='Comando Realizado Por: {}| Shiryu Bot ‚òÖ'.format(ctx.message.author.name))
        await ctx.send(embed=embed)
        embedpv = discord.Embed(title='A√ß√£o | Kick'.format(ctx.message.author.mention), color=0xff0Ab)
        embedpv.add_field(name='üëÆ Executor', value=ctx.message.author)
        embedpv.add_field(name='üíª Servidor', value=ctx.message.guild.name)
        embedpv.add_field(name='üíª id', value=ctx.message.author.id)
        embedpv.add_field(name='üìù Motivo', value=motivo)
        embedpv.set_thumbnail(url=ctx.message.guild.icon_url)
        await user.send(embed=embedpv)
        print('comando kick digitado no servidor {} por {}'.format(ctx.message.server.name, ctx.message.author))
		
@bot.command()
async def vote():
    embed = discord.Embed(description='**Ol√°! Poderia Me Ajudar Votando Em Mim? clique [aqui](https://discordbots.org/bot/539468157291855903/vote)**', color=0x00ffbb)
    await ctx.send(embed=embed)
	
@bot.command(pass_context=True)
async def votar(ctx, *, mensagem: str= None):
	if not mensagem:
		return await ctx.send('Voc√™ precisa falar algo para votar')
	else:
			vote = await ctx.send(embed=discord.Embed(color=0xff0000, description=mensagem))
			await bot.add_reaction(vote, "‚úÖ")
			await bot.add_reaction(vote, "‚ùå")
	
	
	
@bot.command()
async def attlogs():
	embed = discord.Embed(title='Atualiza√ß√µes do bot', color=0xB0ffA0)
	embed.add_field(name='02/02/2018', value='Bot Aprovado Na Discord Bot List')
	embed.add_field(name='01/02/2018', value='Corre√ß√µes de bugs')
	embed.add_field(name='01/02/2018', value='Adicionado Motivo No Ban e Kick, O Bot tambem envia uma mensagem no PV do usu√°rio banido')
	embed.add_field(name='01/02/2018', value= 'Novo comando de divers√£o ``s!chorar``')
	embed.add_field(name='31/02/3018', value='Novos comandos ``s!votar`` e ``s!pergunta``')
	await ctx.send(embed=embed)
	
			
					

	


	
@bot.command(pass_context=True)
async def invite(ctx):
    e = discord.Embed(description='{} **Ol√° Para Me Adicionar Em Seu Servidor Clique [aqui](https://discordapp.com/oauth2/authorize?client_id=539468157291855903&permissions=8&scope=bot) | Poderia Me Ajudar Dando Um Upvote? Clique [aqui](https://discordbots.org/bot/539468157291855903/vote)**'.format(ctx.message.author.mention), color=0xff0f00)
    await ctx.send(embed=e)
    print('comando invite digitado no servidor {} por {}'.format(ctx.message.server.name, ctx.message.author))
	


@bot.command(pass_context=True)
async def serverinfo(ctx):
        try:
           embed = discord.Embed(color=0xff0000, title='**Server Info**', description='Informa√ß√µes do Servidor **{}**'.format(ctx.message.guild.name), timestamp=datetime.datetime.utcnow())
           embed.set_thumbnail(url=ctx.message.guild.icon_url)
           embed.add_field(name='üëë | Dono:', value=ctx.message.guild.owner)
           embed.add_field(name='üë• | Membros:', value=str(len(ctx.message.guild.members)))
           embed.add_field(name='üìÉ | Cargos:', value=len(ctx.message.guild.roles))
           embed.add_field(name='üòÅ | Emojis:', value=len(ctx.message.guild.emojis))
           embed.add_field(name='ü§ñ | Bots:', value=str(len([a for a in ctx.message.guild.members if a.bot])))
           embed.add_field(name='üï§ | Criado em:', value=ctx.message.guild.created_at.strftime('%d %b %Y √†s %H:%M'))
           embed.add_field(name='üåé | Regi√£o:', value=str(ctx.message.guild.region).title())
           embed.set_footer(text='Comando usado por {}'.format(ctx.message.author.name), icon_url=ctx.message.author.avatar_url)
           await ctx.send(embed=embed)
        except:
           await ctx.channel.send('‚ùå**ERRO**‚ùå') 
    

@bot.command(pass_context=True)
async def avatar(ctx, user: discord.User=None):
	user = user or ctx.message.author
	
	list = (user.avatar_url), (user.avatar_url)
	hug = random.choice(list)
	hugemb = discord.Embed(title='Avatar de {}'.format(user.name), color=0x6A1B9A)
	hugemb.set_image(url=hug)
	hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
	await ctx.send(embed=hugemb)
	

	
	

	

	
@bot.command(pass_context=True)
async def meme(ctx):
	a = 'https://cdn.discordapp.com/attachments/514045065929162764/539763086895349760/images_9.jpeg', 'https://cdn.discordapp.com/attachments/514045065929162764/539763086895349761/cara-mano-tatuei-o-nome-da-minha-namora-e-ela-20426746.png', 'https://cdn.discordapp.com/attachments/514045065929162764/539763087474032640/images_7.jpeg', 'https://cdn.discordapp.com/attachments/514045065929162764/539763087474032641/images_10.jpeg', 'https://cdn.discordapp.com/attachments/514045065929162764/539763088002383883/images_11.jpeg', 'https://cdn.discordapp.com/attachments/514045065929162764/539763088455630855/3d6dcd431d328b82ac2bc8edf5f754ee--kawaii.jpg'
	hug = random.choice(a)
	hugemb = discord.Embed(title='SO MEME DE QUALIDADE MONSTRA', color=0x6A1B9A)
	hugemb.set_image(url=hug)
	hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
	await ctx.send(embed=hugemb)
	
	

	

    
    
@bot.command(pass_context = True)
async def avisar(ctx, member: discord.Member=None, *, motivo: str = None):
    motivo = motivo or n
    if not member:
    	return await ctx.send('{} Voc√™ N√£o Especificou o Usu√°rio'.format(ctx.message.author.mention))
    if not ctx.author.guild_permissions.kick_members:
    	rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
    	rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    	return await ctx.send(embed=rcat)
    else:
    	embed = discord.Embed(description='{} foi avisado com sucesso por {}'.format(member.mention, ctx.message.author.mention), color=0x7a00bb)
    	embedpv = discord.Embed(title='Aviso', color=0x00AB70)
    	embedpv.add_field(name='Aviso Do servidor', value=ctx.message.guild.name)
    	embedpv.add_field(name='Autor', value=ctx.message.author)
    	embedpv.add_field(name='Motivo', value=motivo)
    	embedpv.set_thumbnail(url=ctx.message.guild.icon_url)
    	await member.send(embed=embedpv)
    	await ctx.send(embed=embed)  
		

	
@bot.command(pass_context=True)
async def setcargo(ctx, role: discord.Role=None, member: discord.Member=None, *, motivo: str=None):
    if not member:
    	return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio.'.format(ctx.message.author.mention))
    if not ctx.author.guild_permissions.manage_roles:
    	rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
    	rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    	return await ctx.send(embed=rcat)
  
    if not role:
        await ctx.send('{} Voc√™ Precisa Mencionar Um Cargo Para Adicionar'.format(ctx.message.author.mention))
    else:
        await member.add_roles(role)
    embed = discord.Embed(title='A√ß√£o | Adicionar Cargo', color=0xff0000)
    embed.add_field(name='üëÆ Autor', value=ctx.message.author)
    embed.add_field(name='üíª Id', value=ctx.message.author.id)
    embed.add_field(name='üë• Usu√°rio', value=member)
    embed.add_field(name='üíª Id', value=member.id)
    
    await ctx.send(embed=embed)

  	


@bot.command(pass_context=True)
async def removercargo(ctx, role: discord.Role=None, member: discord.Member=None, *, motivo: str=None):
    if not member:
    	return await ctx.send('{} Voc√™ n√£o especificou o usu√°rio.'.format(ctx.message.author.mention))
    if not ctx.author.guild_permissions.manage_roles:
    	rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
    	rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
    	return await ctx.send(embed=rcat)
    if not role:
        await ctx.send('{} Voc√™ Precisa Mencionar Um Cargo Para Remover'.format(ctx.message.author.mention))
    else:
        await member.remove_roles(role)
    embed = discord.Embed(title='A√ß√£o | Remover Cargo', color=0xff0000)
    embed.add_field(name='üëÆ Autor', value=ctx.message.author)
    embed.add_field(name='üíª Id', value=ctx.message.author.id)
    embed.add_field(name='üë• Usu√°rio', value=member)
    embed.add_field(name='üíª Id', value=member.id)
      
    await ctx.send(embed=embed)
  
    
@bot.command(pass_context=True)
async def falar(ctx, *, arg: str=None):
    if not arg:
        return await ctx.send('{} Voc√™ Precisa Escrever Algo Para Eu Falar.'.format(ctx.message.author.mention))
    else:
        await ctx.send("{} Me For√ßou A Falar...{}".format(ctx.message.author.mention, arg))
        

	
@bot.command(pass_context=True, aliases=['slap'])
async def tapa(ctx, user: discord.User=None):
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        pic = nekos.img('slap')
        hugemb = discord.Embed(title='A√ß√£o | Tapaüî•', description=':scream:| **{}** Deu Um tapa em **{}**! Que Tapa!'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=pic)
        hugemb.set_footer(text ='Comando realizado por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)
        
@bot.command(pass_context=True)
async def google(ctx, *, message: str = None):
        try:
            if message is None:
                await ctx.send("Voc√™ precisa pesquisar algo! `s!google [pesquisa]`")
            else:
                words = f'https://www.google.com/search?q={message}'.replace(' ', '+')
                search = discord.Embed(title='Pesquisa realizada com sucesso!', description='**Resultado da pesquisa no Google:**', colour=0xff0000, timestamp=datetime.datetime.utcnow())
                search.add_field(name='------------------------------------------------', value=('‚û° [RESULTADO](' + words) + ')\n')
                search.set_footer(text='Comando usado pelo(a) {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
                await ctx.send(embed=search)
        except Exception as e:
            await ctx.send(f"[ERROR]: {e}")
		
@bot.command(pass_context=True)
async def brigar(ctx, user: discord.User=None):
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        list = 'https://cdn.discordapp.com/attachments/514045065929162764/539516094273290240/300px-DarkCureFight.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539733424185802763/source.gif'
        hug = random.choice(list)
        hugemb = discord.Embed(title='A√ß√£o | Briga üëä',  description=':scream:| **{}** Brigou com **{}**!'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=hug)
        hugemb.set_footer(text ='Comando realizado por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)
        
	
@bot.command(pass_context=True)
async def dance(ctx, user: discord.User=None):
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        list = 'https://cdn.discordapp.com/attachments/514045065929162764/539516095900418104/fanfiction-naruto-ao-seu-lado-2635515231020140950.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539516093593550868/ed8964dd9fb2f90e5eb4b19c577bec74.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539516093593550869/Akatsuki28.gif'
        hug = random.choice(list)
        hugemb = discord.Embed(title='A√ß√£o | Dan√ßar',  description=':man_dancing:| **{}** Esta dan√ßando com **{}**! Passinho dos Maloka üòé'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=hug)
        hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)
        
		

@bot.command(pass_context=True)
async def matar(ctx, user: discord.User=None):
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        list = 'https://cdn.discordapp.com/attachments/514045065929162764/539733424185802762/b19b70f5c546ec7c67c2f0b4e61c21f743a5acaf_hq.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539733902097645568/tumblr_m6rerquar01qd4f2uo1_500.gif'
        hug = random.choice(list)
        hugemb = discord.Embed(title='A√ß√£o | Matar',  description='üëÆ| **{}** Matou **{}**! ASSASINO!'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=hug)
        hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)
	

	
	
@bot.command(pass_context=True)
async def atacar(ctx, user: discord.User=None):
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        list = 'https://cdn.discordapp.com/attachments/514045065929162764/539494351030452238/tumblr_mzh5vtuEIC1rm4wgqo4_r2_500.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539494352926277633/01_Rikka.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539494350053310475/G4dfvA5.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539733423418376194/large.gif'
        hug = random.choice(list)
        hugemb = discord.Embed(title='A√ß√£o | Atack!',  description='üí•| **{}** Atacou **{}**! Como ousas me atacar!'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=hug)
        hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)
	
@bot.command(pass_context=True)
async def suicidio(ctx):
	list = 'https://cdn.discordapp.com/attachments/514045065929162764/533344634576044052/tumblr_nee9xjzaxR1r3rdh2o1_500-1.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/533344635247001602/47892bb88afc132a3afb775988208240.gif'
	
	
	
	hug = random.choice(list)
	hugemb = discord.Embed(title='Suicidio üíî',  description='**{}** se suicidou!'.format(ctx.message.author.name), color=0xA7ffbb)
	hugemb.set_image(url=hug)
	hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
	await ctx.send(embed=hugemb)


				

	
@bot.command(pass_context=True)
async def voadora(ctx, user: discord.User=None):
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        list = 'https://cdn.discordapp.com/attachments/514045065929162764/539733422621589504/giphy_6.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/539733422621589504/giphy_6.gif'
        hug = random.choice(list)
        hugemb = discord.Embed(title='Voadora',  description='**{}** Deu uma voadora em **{}** EITA!'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=hug)
        hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)

nc = "Parada Cardiaca"		
@bot.command(pass_context=True)
async def deathnote(ctx, user: discord.User=None,*, causa: str=None):
    causa = causa or nc
    if not user:
        return await ctx.send('{} Voc√™ N√£o Especificou Um Usu√°rio'.format(ctx.message.author.mention))
    else:
        list = 'https://cdn.discordapp.com/attachments/514045065929162764/534806488531599380/14ae937e622c452bc45e509ed43c8e38a410fc0b_hq.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/533615190273425409/67dc6ce11c0ebe1c723983f18d7f68a8b0d11887_hq.gif'
        hug = random.choice(list)
        hugemb = discord.Embed(title='A√ß√£o | Death Note',  description='**{}** escreveu o nome de **{}** em seu Death Note'.format(ctx.message.author.name, user.name), color=0xA7ffbb)
        hugemb.set_image(url=hug)
        hugemb.set_footer(text='Bot Oficial Shiryu')
        await ctx.send(embed=hugemb)
        await asyncio.sleep(5)
        hugemb = discord.Embed(title='Faliceu',  description='**{}** morreu Apos 30 segundos\n'
        'seu nome escrito no Death Note de **{}**\n'
        'Causa Da Morte: **{}**'.format(user.name, ctx.message.author.name, causa), color=0xA7ffbb)
        hugemb.set_footer(text ='Comando pedido por: {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
        await ctx.send(embed=hugemb)





  
@bot.command(pass_conetxt=True, aliases=['beijar'])
async def kiss(ctx, member: discord.Member=None):
	if not member:
		await ctx.send(f'{ctx.author.mention} Mencione algu√©m')
	else:
		pic = nekos.img('kiss')
		embed = discord.Embed(color=0xFF00FF, description=f'**{member.mention}** recebeu um beijo de **{ctx.author.mention}** casal fofo!')
		embed.set_image(url=pic)
		await ctx.send(embed=embed)
                
   
			
@bot.command(pass_conetxt=True, aliases=['abra√ßar'])
async def hug(ctx, member: discord.Member=None):
	if not member:
		await ctx.send(f'{ctx.author.mention} Mencione algu√©m')
	else:
		pic = nekos.img('hug')
		embed = discord.Embed(color=0xFFFF00, description=f'**{member.mention}** recebeu um abra√ßo de **{ctx.author.mention}**')
		embed.set_image(url=pic)
		await ctx.send(embed=embed) 
	
@bot.command()
async def flipcoin():
	list = 'tapa na **CARA**', 'Rei perdeu a **COROA**'
	await ctx.send(random.choice(list))
	
			


@bot.command(pass_context=True, aliases=['clear','limpar'])
async def purge(ctx, amount:int=None):
	if not ctx.author.guild_permissions.manage_messages:
		rcat = discord.Embed(title='Erro', description='Voc√™ N√£o Tem Permiss√£o Para Executar Esse Comando.', color=0xFF0000)
		rcat.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
		return await ctx.send(embed=rcat)
	if amount == None:
		apurge = discord.Embed(title='Erro', description='Voc√™ Deve Adicionar Uma Quantidade De Mensagens Para serem deletadas', color=0xFF0000)
		apurge.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
		return await ctx.send(embed=apurge)
		await ctx.channel.purge(limit=amount+1)
		spurge = discord.Embed(title='Clear', description=f'{ctx.message.author.mention} Apagou {amount} mensagens!', color=0x00FF00)
		spurge.set_author(name=f'{ctx.message.author.display_name}', icon_url=f'{ctx.message.author.avatar_url}')
		await ctx.send(embed=spurge)
    

   

    
@bot.command(pass_context = True)
async def modajuda(ctx):
    author = ctx.message.author
    r, g, b = tuple(int(x * 255) for x in colorsys.hsv_to_rgb(random.random(), 1, 1))
    embed = discord.Embed(color = discord.Color((r << 16) + (g << 8) + b))
    embed.set_author(name='Comandos Modera√ß√£o Help')
    embed.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
    embed.add_field(name = 's!kick ',value ='como usar ``s!kick @usu√°rio <motivo>`` Expulsa o usu√°rio marcado',inline = False)
    embed.add_field(name = 's!ban ',value ='Como usar ``s!ban @usu√°rio <motivo>`` bane o usu√°rio marcado',inline = False)
    embed.add_field(name = 's!addrole ',value ='Como usar ``s!setcargo @cargo @usu√°rio`` adiciona um determinado cargo ao usu√°rio marcado',inline = False)
    embed.add_field(name = 's!removerole',value ='Como usar ``s!removercargo @cargo @usu√°rio`` remove um determinado cargo do usu√°rio marcado ',inline = False)
    embed.add_field(name = 's!clear',value ='Como usar ``s!clear <quantidade>`` apaga as mensagens do canal de texto atual ',inline = False)
    embed.add_field(name = 's!avisar',value ='Como usar ``s!avisar @usu√°rio <mensagem>`` avisa um usu√°rio no PV ',inline = False)


    await bot.send_message(author,embed=embed)
    await bot.say('{} Enviei mensagens em sua DM'.format(ctx.message.author.mention))
    print('comando modajuda digitado no servidor {} por {}'.format(ctx.message.server.name, ctx.message.author))
    
@bot.command(pass_context=True)
async def pergunta(ctx, *, pergunta: str = None):
    if not pergunta:
        return await ctx.send("Voc√™ precisa perguntar alguma coisa.")
    else:
        resposta = choice(['Sim', 'N√£o', 'Talvez', 'Nunca', 'Claro'])
        embed = discord.Embed(color=0xFF0000)
        embed.add_field(name="Pergunta:", value='{}'.format(pergunta), inline=False)
        embed.add_field(name="Resposta:", value=resposta, inline=False)
        await ctx.send(embed=embed)
        print('comando roleta digitado no servidor {} por {}'.format(ctx.message.server.name, ctx.message.author))
    
    
   
   

@bot.command(pass_context=True,aliases=['ui'])
async def userinfo(ctx, user: discord.Member = None):
    '''See information about a user!\n`ui`'''
  


    if user is None:
    	user = ctx.message.author
    
    
    	
    
 
    suserinfo = discord.Embed(title = (str(user.display_name)),colour=0x00FF00)
    suserinfo.set_thumbnail(url = user.avatar_url_as(static_format='png',size=1024))
    suserinfo.add_field(name ='üìÜ|Entrou em', value=str(user.joined_at.strftime("%A, %B %d %Y @ %H:%M:%S %p")))

    suserinfo.add_field(name='üíª|Status',value=str(user.status))
    suserinfo.add_field(name="Tag", value=user.discriminator)
    
    suserinfo.add_field(name ='üìä|Melhor Cargo',value=str(user.top_role))
    suserinfo.set_footer(text =f'Conta criada em: {str(user.created_at.strftime("%A, %B %d %Y @ %H:%M:%S %p"))}')
    await ctx.send(embed=suserinfo)
				
    	
      
@bot.command(pass_context=True)
async def chorar(ctx):
	list = 'https://cdn.discordapp.com/attachments/514045065929162764/540913648453943338/tumblr_mchb17x02w1r5patso2_500.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/540913648453943336/0319d0c4d6ce1750c2fc7b3c5d383723db18d37dr1-500-284_00.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/540913648034643972/86a31db739b7f40d576c90f1ff9329ab254958f0_hq.gif', 'https://cdn.discordapp.com/attachments/514045065929162764/540913647610757130/cfd934eac0f14d3f43284b16ec0a902b.gif'
	
	
	
	hug = random.choice(list)
	hugemb = discord.Embed(title='A√ß√£o | Chorar',  description='üò≠|**{}** Esta chorando...'.format(ctx.message.author.name), color=0xA7ffbb)
	hugemb.set_image(url=hug)
	hugemb.set_footer(text ='Comando realizado por {} | Shiryu Bot Oficial'.format(ctx.message.author.name))
	await ctx.send(embed=hugemb)
	print('comando chorar digitado no servidor {} por {}'.format(ctx.message.server.name, ctx.message.author))
	
@bot.command(pass_context=True, aliases=['bi'])
async def botinfo(ctx):
	embed = discord.Embed(title="Minhas Informa√ß√µes", color=0x00ffba)
	embed.add_field(name="**=====Principais Informa√ß√µes=====**", value=f"üìÜ **Criado Em:** `20 Mar√ßo, 2019 √†s 14:32`\n<:programador:582173369722601522> **Criador:** …±‡∏ÑÔΩ≤‡´Ø∆≤‡∏£ ‚Ä†#8766\n<:programando:582173138448547843> **Linguagem Usada:** Python\n<a:discordlove:582176157609492490> **Vers√£o Discord.py:** {discord.__version__}\n‚ùì **Prefixo:** `s!`")
	embed.add_field(name='**=====Outras Informa√ß√µes=====**', value=f"<a:diversao:582178177078788096> **Me Adicione:** [Clique aqui](https://discordapp.com/oauth2/authorize?client_id=539468157291855903&permissions=8&scope=bot)\n<:DiscordPartner:582179555209641994> **Servidor De Suporte**: [Clique Aqui](https://discord.gg/KabD5BC)\n<a:DiscordHype:582179619978084356> **Servidores**:  `{str(len(set(bot.guilds)))}`\nüí¨ **Canais:** `{str(len(set(bot.get_all_channels())))}`\nüë• **Usu√°rios:** `{str(len(set(bot.get_all_members())))}`")

	await ctx.send(embed=embed)

	        
	        	        
	        	        	             
	
@bot.command(name="h", aliases=['ajuda'])
async def help(ctx):
	member = ctx.message.author
	help_p = discord.Embed(color=0xff00AB)
	help_p.add_field(name="Reaja Para Escolher Uma Categoria", value="üëÆ **Modera√ß√£o**\n‚Ä¢ comandos como `ban, kick...`\n‚ú® **Divers√£o**\n‚Ä¢ comandos como `kiss, hug...`\n‚Ñπ **Informa√ß√µes**\n‚Ä¢ comandos como `ping, avatar...`\nüöÄ **Outros**\n‚Ä¢ comandos como `pergunta, deathnote...`\nüí∏ **Economia**\n‚Ä¢ comandos como `pagar, saldo...`")
	help_p.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
	await member.send(f'{member.mention}Duvidas? Entre em Meu Servidor De Suporte\nhttps://discord.gg/KabD5BC')
	await member.send(f'{member.mention} Quer Me Adicionar Em Seu Servidor? Digite `s!invite`')	
	msg = await member.send(embed=help_p)
	await msg.add_reaction('üëÆ')
	await msg.add_reaction('‚ú®')
	await msg.add_reaction('‚Ñπ')
	await msg.add_reaction('üöÄ')
	await msg.add_reaction('üí∏')
	
	await ctx.send(f'{member.mention} Verifique Suas Mensagens Privadas.')
	try:
		while True:
			reaction, user = await bot.wait_for("reaction_add", timeout=360, check=lambda reaction, user: reaction.message.id == msg.id and user.id == ctx.author.id)
			emoji = str(reaction.emoji)
			if emoji == 'üëÆ':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda Modera√ß√£o")
				embed_help.add_field(name = 'ban ',value ='Como usar ``s!ban <@usu√°rio> [motivo]`` - bane o usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'kick',value ='Como usar ``s!kick <@usu√°rio> [motivo]`` - Expulsa o usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'setcargo',value ='Como usar ``s!setcargo <@cargo> <@usu√°rio>`` - seta um cargo algo usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'lock',value ='Como usar ``s!lock`` - bloqueia o canal para membros',inline = False)
				embed_help.add_field(name = 'unlock',value ='Como usar ``s!unlock`` - desbloqueia o canal para membros',inline = False)
				embed_help.add_field(name = 'mute',value ='Como usar ``s!mute <@usu√°rio> [motivo]`` - Muta o usu√°rio mencionado **DESATIVADO**',inline = False)
				embed_help.add_field(name = 'unmute',value ='Como usar ``s!unmute <@usu√°rio>`` - Desmuta o usu√°rio mencionado **DESATIVADO**',inline = False)	
				embed_help.add_field(name = 'removercargo',value ='Como usar ``s!removercargo <@cargo> <@usu√°rio>`` - remove um cargo algo usu√°rio mencionado',inline = False)
				embed_help.add_field(name = 'clear',value ='Como usar ``s!clear <quantidade>`` - limpa o canal de texto atual',inline = False)
				embed_help.add_field(name = 'avisar',value ='Como usar ``s!avisar <@usu√°rio> [motivo]`` - avisa uma pessoa sobre algo',inline = False)								
				embed_help.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')												
				msg = await member.send(embed=embed_help)
				await msg.add_reaction('‚¨Ö')
			if emoji == '‚ú®':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda A√ß√µes", color = 0xff00AA)
				embed_help.add_field(name = 'dance ',value ='Como usar ``s!dance`` - dance com algum usu√°rio',inline = False)
				embed_help.add_field(name = 'kiss',value ='Como usar ``s!kiss <@usu√°rio>`` - O amor esta no ar! beije determinado usu√°rio!',inline = False)
				embed_help.add_field(name = 'hug ',value ='Como usar ``s!hug <@usu√°rio>``',inline = False)
				embed_help.add_field(name = 'suicidio ',value ='Como usar ``s!suicidio``',inline = False)
				embed_help.add_field(name = 'matar',value ='Como usar ``s!matar <@usu√°rio>``',inline = False)
				embed_help.add_field(name = 'slap<@usu√°rio>',value ='Como usar ``s!slap <@usu√°rio>`` -  de uns tap cabuloso em alguem que esta te pertubando',inline = False)
				embed_help.add_field(name = 'chorar ',value ='Como usar ``s!chorar``',inline = False)
				embed_help.add_field(name = 'atack',value ='Como usar ``s!atack <@usu√°rio> - ataque o usu√°rio mencionado``',inline = False)
				embed_help.add_field(name = 'brigar',value ='Como usar ``s!brigar <@usu√°rio>`` - brigue com seu amiguinho (n√£o fa√ßa isso)',inline = False)
				embed_help.add_field(name = 'voadora',value ='Como usar ``s!voadora <@usu√°rio>`` - de uma voadora no seu amiguinho (n√£o fa√ßa isso)',inline = False)
				embed_help.add_field(name = 'meme',value ='Como usar ``s!meme`` - Mostra Um Meme',inline = False)															
				embed_help.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
				msg = await member.send(embed=embed_help)
				
				await msg.add_reaction('‚¨Ö')
			if emoji == '‚Ñπ':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda Informa√ß√µes", color=0xff00ab)
				embed_help.add_field(name = 'serverinfo',value ='Como usar ``s!serverinfo`` - veja as informa√ß√µes do servidor atual',inline = False)
				embed_help.add_field(name = 'ping',value ='Como usar ``s!ping`` - Veja meu tempo de resposta',inline = False)
				embed_help.add_field(name = 'avatar',value ='Como usar ``s!avatar<@usu√°rio>`` - Veja O Avatar Do Usu√°rio Mencionado',inline = False)
				embed_help.add_field(name = 'ajuda ',value ='Como usar ``s!ajuda`` Meus comandos',inline = False)
				embed_help.add_field(name = 'userinfo',value ='Como usar ``s!userinfo [@usu√°rio]`` Expulsa o usu√°rio mencionado',inline = False)

				embed_help.add_field(name = 'invite',value ='Como usar ``s!invite`` - Meu convite para caso queira me adicionar em seu servidor',inline = False)
				embed_help.add_field(name = 'vote',value ='Como usar ``s!vote`` - Me Ajude Dando Um Upvote Na Discord Bot List',inline = False)
				embed_help.add_field(name="botinfo", value="Como Usar ``s!botinfo`` Veja minhas informa√ß√µes")
				embed_help.add_field(name="suporte", value="Como Usar ``s!suporte`` Veja meu servidor de suporte")					
				embed_help.add_field(name = 'google',value ='Como usar ``s!google <pesquisa>`` - Fa√ßa Uma Pesquisa',inline = False)
										
				embed_help.set_image(url = 'https://image.ibb.co/caM2BK/help.gif')
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
							
				msg = await member.send(embed=embed_help)
				await msg.add_reaction('‚¨Ö')
			if emoji == 'üöÄ':
				await msg.delete()
				embed_help = discord.Embed(description="üìô‚îÉMenu de ajuda", color=0xff00ab)
				embed_help.add_field(name = 'dog ',value ='Como usar ``s!dog`` - foto aleatoria de um dog√£o',inline = False)
				embed_help.add_field(name = 'cat',value ='Como usar ``s!cat`` - foto aleatoria de um gato',inline = False)
				embed_help.add_field(name = 'votar',value ='Como usar ``s!votar <mensagem>`` - Inicie uma vota√ß√£o em seu servidor',inline = False)				
				embed_help.add_field(name = 'flipcoin',value ='Como usar ``s!flipcoin`` - Cara Ou Coroa',inline = False)																					
				embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
				msg = await member.send(embed=embed_help)
				await msg.add_reaction('‚¨Ö')
			if emoji == 'üí∏':
					await msg.delete()
					embed_help = discord.Embed(description="üìô‚îÉMenu de Economia", color=0xff00ab)
					embed_help.add_field(name = 'pagar',value ='Como usar ``s!pagar <@usu√°rio> <valor>`` - pague o seu amigo(a) usando minha econimia :)',inline = False)
					embed_help.add_field(name = 'saldo',value ='Como usar ``s!saldo`` - Veja quantos **ryucoins** Voc√™ tem!',inline = False)
					embed_help.add_field(name = 'rep',value ='Como usar ``s!rep <@usu√°rio>`` - De um ponto de reputa√ß√£o a alguem',inline = False)
					embed_help.add_field(name = 'reps',value ='Como usar ``s!reps [@usu√°rio]`` - Veja quantos pontos de reputa√ß√£o voc√™ (ou seu amigo) tem!',inline = False)
					embed_help.add_field(name = 'daily',value ='Como usar ``s!daily`` - Pegue Uma Recompensa Diaria',inline = False)				
					embed_help.add_field(name = 'Trabalhar',value ='Como usar ``s!trabalhar` - Trabalhe e ganhe ryucoins!',inline = False)
					embed_help.add_field(name="perfil", value="Como Usar ``s!perfil [@usu√°rio]`` Veja seu perfil")
					embed_help.add_field(name="registro", value="Como Usar ``s!registro`` Registre-se em meu sistema")
					embed_help.add_field(name="frase", value="Como Usar ``s!frase <frase>`` Adicione Uma Frase A Seu Perfil")
					embed_help.add_field(name="sobre", value="Como Usar ``s!sobre <desc>` Adicione Uma Descri√ß√£o a seu perfil")
					embed_help.add_field(name="loja", value="Como Usar ``s!loja`` Veja Meu Shop **(Ainda N√£o Adicionado)**")
					embed_help.add_field(name="casar", value="Como Usar ``s!casar <@usu√°rio>`` Case com sua webnamorada! **(Ainda N√£o Adicionado)**")					
					embed_help.add_field(name='-----------------------', value='***<arg> obrigatorio\n[arg] opicional***')				
					msg = await member.send(embed=embed_help)
					await msg.add_reaction('‚¨Ö')							
			if emoji == '‚¨Ö':
				await msg.delete()
				msg = await member.send(embed=help_p)
				await msg.add_reaction('üëÆ')
				await msg.add_reaction('‚ú®')
				await msg.add_reaction('‚Ñπ')
				await msg.add_reaction('üöÄ')
				await msg.add_reaction('üí∏')
	except asyncio.TimeoutError:
		await msg.delete() #deletar mensagem ap√≥s um tempo sem resposta dos reactions
	except Exception as e:
		await msg.delete()
		print(repr(e))

bot.run(str(os.environ.get('BOT_TOKEN')))
